# Generated by Django 5.2.6 on 2025-09-07 13:04

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('forum', '0004_post_parent_post'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='topic',
            name='is_announcement',
            field=models.BooleanField(default=False, verbose_name='Объявление'),
        ),
        migrations.AddField(
            model_name='topic',
            name='is_locked',
            field=models.BooleanField(default=False, verbose_name='Заблокирована'),
        ),
        migrations.AddField(
            model_name='topic',
            name='last_post',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='last_post_topics', to='forum.post', verbose_name='Последнее сообщение'),
        ),
        migrations.AddField(
            model_name='topic',
            name='posts_count',
            field=models.PositiveIntegerField(default=0, verbose_name='Сообщения'),
        ),
        migrations.AddField(
            model_name='topic',
            name='tags',
            field=models.CharField(blank=True, max_length=500, verbose_name='Теги'),
        ),
        migrations.CreateModel(
            name='ForumModeration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(choices=[('topic_locked', 'Тема заблокирована'), ('topic_unlocked', 'Тема разблокирована'), ('topic_pinned', 'Тема закреплена'), ('topic_unpinned', 'Тема откреплена'), ('topic_closed', 'Тема закрыта'), ('topic_opened', 'Тема открыта'), ('post_hidden', 'Сообщение скрыто'), ('post_shown', 'Сообщение показано'), ('user_warned', 'Пользователь предупрежден'), ('user_banned', 'Пользователь забанен')], max_length=20, verbose_name='Тип действия')),
                ('reason', models.TextField(blank=True, verbose_name='Причина')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('moderator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='moderation_actions', to=settings.AUTH_USER_MODEL, verbose_name='Модератор')),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='forum.post', verbose_name='Сообщение')),
                ('target_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='moderation_target', to=settings.AUTH_USER_MODEL, verbose_name='Целевой пользователь')),
                ('topic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='forum.topic', verbose_name='Тема')),
            ],
            options={
                'verbose_name': 'Действие модерации',
                'verbose_name_plural': 'Действия модерации',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ForumPoll',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=200, verbose_name='Вопрос')),
                ('is_multiple_choice', models.BooleanField(default=False, verbose_name='Множественный выбор')),
                ('is_anonymous', models.BooleanField(default=False, verbose_name='Анонимный')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='Истекает')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('topic', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='poll', to='forum.topic', verbose_name='Тема')),
            ],
            options={
                'verbose_name': 'Опрос',
                'verbose_name_plural': 'Опросы',
            },
        ),
        migrations.CreateModel(
            name='PollOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=100, verbose_name='Текст варианта')),
                ('votes_count', models.PositiveIntegerField(default=0, verbose_name='Количество голосов')),
                ('poll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='forum.forumpoll', verbose_name='Опрос')),
            ],
            options={
                'verbose_name': 'Вариант ответа',
                'verbose_name_plural': 'Варианты ответов',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ReputationAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(choices=[('post_liked', 'Лайк за сообщение'), ('post_disliked', 'Дизлайк за сообщение'), ('topic_liked', 'Лайк за тему'), ('topic_disliked', 'Дизлайк за тему'), ('solution_marked', 'Отмечено как решение'), ('helpful_post', 'Полезное сообщение')], max_length=20, verbose_name='Тип действия')),
                ('points', models.IntegerField(verbose_name='Очки')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='forum.post', verbose_name='Сообщение')),
                ('topic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='forum.topic', verbose_name='Тема')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reputation_actions', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Действие репутации',
                'verbose_name_plural': 'Действия репутации',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserReputation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField(default=0, verbose_name='Очки репутации')),
                ('level', models.PositiveIntegerField(default=1, verbose_name='Уровень')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='forum_reputation', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Репутация пользователя',
                'verbose_name_plural': 'Репутация пользователей',
            },
        ),
        migrations.CreateModel(
            name='PollVote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('option', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='forum.polloption', verbose_name='Вариант')),
                ('poll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='forum.forumpoll', verbose_name='Опрос')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='poll_votes', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Голос',
                'verbose_name_plural': 'Голоса',
                'unique_together': {('poll', 'user')},
            },
        ),
    ]
