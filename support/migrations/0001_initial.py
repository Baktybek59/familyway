# Generated by Django 5.2.6 on 2025-09-06 20:16

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0003_parentprofile_birth_date_parentprofile_city_and_more'),
        ('blog', '0001_initial'),
        ('forum', '0001_initial'),
        ('healthcare', '0002_doctor_consultant'),
        ('healthcare_requests', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SupportDashboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('show_open_tickets', models.BooleanField(default=True, verbose_name='Показывать открытые тикеты')),
                ('show_high_priority', models.BooleanField(default=True, verbose_name='Показывать высокий приоритет')),
                ('show_my_tickets', models.BooleanField(default=True, verbose_name='Показывать мои тикеты')),
                ('show_facility_requests', models.BooleanField(default=True, verbose_name='Показывать заявки учреждений')),
                ('show_forum_reports', models.BooleanField(default=True, verbose_name='Показывать жалобы форума')),
                ('show_blog_approvals', models.BooleanField(default=True, verbose_name='Показывать одобрения блога')),
                ('tickets_resolved', models.PositiveIntegerField(default=0, verbose_name='Решенных тикетов')),
                ('average_resolution_time', models.DurationField(blank=True, null=True, verbose_name='Среднее время решения')),
                ('last_activity', models.DateTimeField(auto_now=True, verbose_name='Последняя активность')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Дашборд техподдержки',
                'verbose_name_plural': 'Дашборды техподдержки',
            },
        ),
        migrations.CreateModel(
            name='SupportProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.CharField(max_length=20, unique=True, verbose_name='ID сотрудника')),
                ('department', models.CharField(max_length=100, verbose_name='Отдел')),
                ('phone', models.CharField(max_length=20, verbose_name='Телефон')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлен')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Профиль техподдержки',
                'verbose_name_plural': 'Профили техподдержки',
            },
        ),
        migrations.CreateModel(
            name='SupportTicket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Заголовок')),
                ('description', models.TextField(verbose_name='Описание')),
                ('category', models.CharField(choices=[('dispute', 'Спорный вопрос врач-родитель'), ('facility_request', 'Заявка учреждения'), ('forum_moderation', 'Модерация форума'), ('blog_approval', 'Одобрение статей блога'), ('blog_creator', 'Добавление авторов блога'), ('review_moderation', 'Модерация отзывов'), ('other', 'Другое')], max_length=50, verbose_name='Категория')),
                ('priority', models.CharField(choices=[('low', 'Низкий'), ('medium', 'Средний'), ('high', 'Высокий'), ('urgent', 'Срочный')], default='medium', max_length=20, verbose_name='Приоритет')),
                ('status', models.CharField(choices=[('open', 'Открыт'), ('in_progress', 'В работе'), ('resolved', 'Решен'), ('closed', 'Закрыт')], default='open', max_length=20, verbose_name='Статус')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлен')),
                ('resolved_at', models.DateTimeField(blank=True, null=True, verbose_name='Решен')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tickets', to='support.supportprofile', verbose_name='Назначен')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_tickets', to=settings.AUTH_USER_MODEL, verbose_name='Создан пользователем')),
                ('related_blog_post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='blog.blogpost', verbose_name='Статья блога')),
                ('related_doctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='healthcare.doctor', verbose_name='Связанный врач')),
                ('related_facility_request', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='healthcare_requests.healthcarefacilityrequest', verbose_name='Заявка учреждения')),
                ('related_forum_post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='forum.post', verbose_name='Пост форума')),
                ('related_parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.parentprofile', verbose_name='Связанный родитель')),
            ],
            options={
                'verbose_name': 'Тикет техподдержки',
                'verbose_name_plural': 'Тикеты техподдержки',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SupportNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('new_ticket', 'Новый тикет'), ('ticket_assigned', 'Тикет назначен'), ('ticket_updated', 'Тикет обновлен'), ('ticket_resolved', 'Тикет решен'), ('facility_request', 'Новая заявка учреждения'), ('forum_report', 'Жалоба на форум'), ('blog_approval', 'Статья на одобрение'), ('review_report', 'Жалоба на отзыв')], max_length=50, verbose_name='Тип уведомления')),
                ('title', models.CharField(max_length=200, verbose_name='Заголовок')),
                ('message', models.TextField(verbose_name='Сообщение')),
                ('is_read', models.BooleanField(default=False, verbose_name='Прочитано')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Получатель')),
                ('related_ticket', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='support.supportticket', verbose_name='Связанный тикет')),
            ],
            options={
                'verbose_name': 'Уведомление техподдержки',
                'verbose_name_plural': 'Уведомления техподдержки',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TicketComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Содержание')),
                ('is_internal', models.BooleanField(default=False, verbose_name='Внутренний комментарий')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='support.supportticket', verbose_name='Тикет')),
            ],
            options={
                'verbose_name': 'Комментарий тикета',
                'verbose_name_plural': 'Комментарии тикетов',
                'ordering': ['created_at'],
            },
        ),
    ]
