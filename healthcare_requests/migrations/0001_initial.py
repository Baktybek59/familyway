# Generated by Django 5.2.6 on 2025-09-06 19:17

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('healthcare', '0002_doctor_consultant'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HealthcareFacilityRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('facility_name', models.CharField(max_length=200, verbose_name='Название учреждения')),
                ('description', models.TextField(verbose_name='Описание учреждения')),
                ('contact_person', models.CharField(max_length=100, verbose_name='Контактное лицо')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('phone', models.CharField(max_length=20, verbose_name='Телефон')),
                ('address', models.TextField(verbose_name='Адрес')),
                ('city', models.CharField(max_length=100, verbose_name='Город')),
                ('username', models.CharField(max_length=150, verbose_name='Логин')),
                ('password', models.CharField(max_length=128, verbose_name='Пароль')),
                ('license_document', models.FileField(help_text='Загрузите копию лицензии на медицинскую деятельность', upload_to='facility_requests/licenses/', verbose_name='Лицензия')),
                ('additional_documents', models.FileField(blank=True, null=True, upload_to='facility_requests/documents/', verbose_name='Дополнительные документы')),
                ('status', models.CharField(choices=[('pending', 'Ожидает рассмотрения'), ('approved', 'Одобрена'), ('rejected', 'Отклонена'), ('needs_revision', 'Требует доработки')], default='pending', max_length=20, verbose_name='Статус заявки')),
                ('admin_notes', models.TextField(blank=True, verbose_name='Заметки администратора')),
                ('processed_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата обработки')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата подачи')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('facility_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='healthcare.healthcarecategory', verbose_name='Тип учреждения')),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_facility_requests', to=settings.AUTH_USER_MODEL, verbose_name='Обработано администратором')),
            ],
            options={
                'verbose_name': 'Заявка медицинского учреждения',
                'verbose_name_plural': 'Заявки медицинских учреждений',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FacilityNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('request_approved', 'Заявка одобрена'), ('request_rejected', 'Заявка отклонена'), ('new_consultation', 'Новая консультация'), ('new_review', 'Новый отзыв'), ('system_update', 'Обновление системы')], max_length=20, verbose_name='Тип уведомления')),
                ('title', models.CharField(max_length=200, verbose_name='Заголовок')),
                ('message', models.TextField(verbose_name='Сообщение')),
                ('is_read', models.BooleanField(default=False, verbose_name='Прочитано')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('facility_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='healthcare_requests.healthcarefacilityrequest', verbose_name='Заявка учреждения')),
            ],
            options={
                'verbose_name': 'Уведомление учреждения',
                'verbose_name_plural': 'Уведомления учреждений',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FacilityDashboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_doctors', models.PositiveIntegerField(default=0, verbose_name='Всего врачей')),
                ('total_consultations', models.PositiveIntegerField(default=0, verbose_name='Всего консультаций')),
                ('total_reviews', models.PositiveIntegerField(default=0, verbose_name='Всего отзывов')),
                ('average_rating', models.DecimalField(decimal_places=2, default=0, max_digits=3, verbose_name='Средний рейтинг')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активно')),
                ('last_activity', models.DateTimeField(auto_now=True, verbose_name='Последняя активность')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('facility_request', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='dashboard', to='healthcare_requests.healthcarefacilityrequest', verbose_name='Заявка учреждения')),
            ],
            options={
                'verbose_name': 'Дашборд учреждения',
                'verbose_name_plural': 'Дашборды учреждений',
            },
        ),
    ]
