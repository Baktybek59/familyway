#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ FamilyWay +
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./test_security_headers.sh

set -e

echo "üõ°Ô∏è  –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ FamilyWay +"
echo "=================================================="

DOMAIN="familyway.plus"
WWW_DOMAIN="www.familyway.plus"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞
check_header() {
    local domain=$1
    local header_name=$2
    local expected_value=$3
    local description=$4
    
    echo -n "üîç $description... "
    
    # –ü–æ–ª—É—á–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
    headers=$(curl -s -I "https://$domain" 2>/dev/null || echo "")
    
    if [ -z "$headers" ]; then
        echo -e "${RED}‚ùå FAIL (–Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç)${NC}"
        return 1
    fi
    
    # –ò—â–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ (case insensitive)
    header_line=$(echo "$headers" | grep -i "^$header_name:" || echo "")
    
    if [ -z "$header_line" ]; then
        echo -e "${RED}‚ùå FAIL (–∑–∞–≥–æ–ª–æ–≤–æ–∫ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç)${NC}"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ (–µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω–æ)
    if [ -n "$expected_value" ]; then
        if echo "$header_line" | grep -qi "$expected_value"; then
            echo -e "${GREEN}‚úÖ OK${NC}"
            echo "   üìã –ó–Ω–∞—á–µ–Ω–∏–µ: $header_line"
        else
            echo -e "${YELLOW}‚ö†Ô∏è  WARNING (–Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ)${NC}"
            echo "   üìã –û–∂–∏–¥–∞–ª–æ—Å—å: $expected_value"
            echo "   üìã –ü–æ–ª—É—á–µ–Ω–æ: $header_line"
        fi
    else
        echo -e "${GREEN}‚úÖ OK${NC}"
        echo "   üìã –ó–Ω–∞—á–µ–Ω–∏–µ: $header_line"
    fi
    
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ SSL
check_ssl() {
    local domain=$1
    echo -n "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ SSL –¥–ª—è $domain... "
    
    if echo | openssl s_client -servername "$domain" -connect "$domain":443 2>/dev/null | openssl x509 -noout -dates 2>/dev/null; then
        echo -e "${GREEN}‚úÖ OK${NC}"
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–µ
        cert_info=$(echo | openssl s_client -servername "$domain" -connect "$domain":443 2>/dev/null | openssl x509 -noout -text 2>/dev/null)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ç–æ–∫–æ–ª
        protocol=$(echo | openssl s_client -servername "$domain" -connect "$domain":443 2>/dev/null | grep "Protocol" || echo "")
        if [ -n "$protocol" ]; then
            echo "   üìã $protocol"
        fi
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —à–∏—Ñ—Ä
        cipher=$(echo | openssl s_client -servername "$domain" -connect "$domain":443 2>/dev/null | grep "Cipher" || echo "")
        if [ -n "$cipher" ]; then
            echo "   üìã $cipher"
        fi
        
    else
        echo -e "${RED}‚ùå FAIL${NC}"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞
check_redirect() {
    local from=$1
    local to=$2
    echo -n "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞ —Å $from –Ω–∞ $to... "
    
    redirect_url=$(curl -s -o /dev/null -w "%{redirect_url}" "$from" 2>/dev/null || echo "")
    
    if [[ "$redirect_url" == *"$to"* ]]; then
        echo -e "${GREEN}‚úÖ OK${NC}"
        echo "   üìã –†–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞: $redirect_url"
    else
        echo -e "${RED}‚ùå FAIL${NC}"
        echo "   üìã –û–∂–∏–¥–∞–ª—Å—è —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞: $to"
        echo "   üìã –ü–æ–ª—É—á–µ–Ω —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞: $redirect_url"
        return 1
    fi
}

echo ""
echo "üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–º–µ–Ω–æ–≤..."
echo "======================"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ HTTP —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤
check_redirect "http://$DOMAIN" "https://$DOMAIN"
check_redirect "http://$WWW_DOMAIN" "https://$WWW_DOMAIN"

echo ""
echo "üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ SSL..."
echo "=================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ SSL
check_ssl "$DOMAIN"
echo ""
check_ssl "$WWW_DOMAIN"

echo ""
echo "üõ°Ô∏è  –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏..."
echo "====================================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
check_header "$DOMAIN" "Strict-Transport-Security" "max-age=31536000" "HSTS –∑–∞–≥–æ–ª–æ–≤–æ–∫"
check_header "$DOMAIN" "X-Frame-Options" "DENY" "X-Frame-Options –∑–∞–≥–æ–ª–æ–≤–æ–∫"
check_header "$DOMAIN" "X-Content-Type-Options" "nosniff" "X-Content-Type-Options –∑–∞–≥–æ–ª–æ–≤–æ–∫"
check_header "$DOMAIN" "X-XSS-Protection" "1; mode=block" "X-XSS-Protection –∑–∞–≥–æ–ª–æ–≤–æ–∫"
check_header "$DOMAIN" "Referrer-Policy" "strict-origin-when-cross-origin" "Referrer-Policy –∑–∞–≥–æ–ª–æ–≤–æ–∫"
check_header "$DOMAIN" "Content-Security-Policy" "" "Content-Security-Policy –∑–∞–≥–æ–ª–æ–≤–æ–∫"
check_header "$DOMAIN" "Permissions-Policy" "" "Permissions-Policy –∑–∞–≥–æ–ª–æ–≤–æ–∫"

echo ""
echo "üîç –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏..."
echo "============================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
echo -n "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤... "
if curl -s --max-time 5 "https://$DOMAIN/static/" > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ OK${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  WARNING (—Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã)${NC}"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –º–µ–¥–∏–∞ —Ñ–∞–π–ª–æ–≤
echo -n "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ–¥–∏–∞ —Ñ–∞–π–ª–æ–≤... "
if curl -s --max-time 5 "https://$DOMAIN/media/" > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ OK${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  WARNING (–º–µ–¥–∏–∞ —Ñ–∞–π–ª—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã)${NC}"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ health check
echo -n "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ health check... "
health_response=$(curl -s --max-time 5 "https://$DOMAIN/health" 2>/dev/null || echo "")
if echo "$health_response" | grep -q "healthy"; then
    echo -e "${GREEN}‚úÖ OK${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  WARNING (health check –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω)${NC}"
fi

echo ""
echo "üö´ –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
echo "============================================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ .env —Ñ–∞–π–ª–æ–≤
echo -n "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ .env —Ñ–∞–π–ª–æ–≤... "
env_status=$(curl -s -o /dev/null -w "%{http_code}" "https://$DOMAIN/.env" 2>/dev/null || echo "000")
if [ "$env_status" = "403" ] || [ "$env_status" = "404" ]; then
    echo -e "${GREEN}‚úÖ OK (–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω)${NC}"
else
    echo -e "${RED}‚ùå FAIL (–¥–æ—Å—Ç—É–ø–µ–Ω, –∫–æ–¥: $env_status)${NC}"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ .git —Ñ–∞–π–ª–æ–≤
echo -n "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ .git —Ñ–∞–π–ª–æ–≤... "
git_status=$(curl -s -o /dev/null -w "%{http_code}" "https://$DOMAIN/.git" 2>/dev/null || echo "000")
if [ "$git_status" = "403" ] || [ "$git_status" = "404" ]; then
    echo -e "${GREEN}‚úÖ OK (–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω)${NC}"
else
    echo -e "${RED}‚ùå FAIL (–¥–æ—Å—Ç—É–ø–µ–Ω, –∫–æ–¥: $git_status)${NC}"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ backup —Ñ–∞–π–ª–æ–≤
echo -n "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ backup —Ñ–∞–π–ª–æ–≤... "
backup_status=$(curl -s -o /dev/null -w "%{http_code}" "https://$DOMAIN/backup.sql" 2>/dev/null || echo "000")
if [ "$backup_status" = "403" ] || [ "$backup_status" = "404" ]; then
    echo -e "${GREEN}‚úÖ OK (–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω)${NC}"
else
    echo -e "${RED}‚ùå FAIL (–¥–æ—Å—Ç—É–ø–µ–Ω, –∫–æ–¥: $backup_status)${NC}"
fi

echo ""
echo "üìä –°–≤–æ–¥–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤..."
echo "======================="

# –ü–æ–¥—Å—á–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
total_checks=0
passed_checks=0

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏
headers=("Strict-Transport-Security" "X-Frame-Options" "X-Content-Type-Options" "X-XSS-Protection" "Referrer-Policy" "Content-Security-Policy" "Permissions-Policy")

for header in "${headers[@]}"; do
    total_checks=$((total_checks + 1))
    if curl -s -I "https://$DOMAIN" 2>/dev/null | grep -qi "^$header:"; then
        passed_checks=$((passed_checks + 1))
    fi
done

# –ü—Ä–æ–≤–µ—Ä—è–µ–º SSL
total_checks=$((total_checks + 1))
if echo | openssl s_client -servername "$DOMAIN" -connect "$DOMAIN":443 2>/dev/null | openssl x509 -noout -dates 2>/dev/null; then
    passed_checks=$((passed_checks + 1))
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–¥–∏—Ä–µ–∫—Ç
total_checks=$((total_checks + 1))
redirect_url=$(curl -s -o /dev/null -w "%{redirect_url}" "http://$DOMAIN" 2>/dev/null || echo "")
if [[ "$redirect_url" == *"https://$DOMAIN"* ]]; then
    passed_checks=$((passed_checks + 1))
fi

# –í—ã—á–∏—Å–ª—è–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç
percentage=$((passed_checks * 100 / total_checks))

echo "üìà –†–µ–∑—É–ª—å—Ç–∞—Ç—ã: $passed_checks –∏–∑ $total_checks –ø—Ä–æ–≤–µ—Ä–æ–∫ –ø—Ä–æ–π–¥–µ–Ω–æ ($percentage%)"

if [ $percentage -ge 90 ]; then
    echo -e "${GREEN}üéâ –û—Ç–ª–∏—á–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å! A+ —Ä–µ–π—Ç–∏–Ω–≥${NC}"
elif [ $percentage -ge 80 ]; then
    echo -e "${YELLOW}‚úÖ –•–æ—Ä–æ—à–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å! A —Ä–µ–π—Ç–∏–Ω–≥${NC}"
elif [ $percentage -ge 70 ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  –°—Ä–µ–¥–Ω—è—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å! B —Ä–µ–π—Ç–∏–Ω–≥${NC}"
else
    echo -e "${RED}‚ùå –ù–∏–∑–∫–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å! –¢—Ä–µ–±—É—é—Ç—Å—è —É–ª—É—á—à–µ–Ω–∏—è${NC}"
fi

echo ""
echo "üîß –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:"
echo "1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∞–π—Ç –≤ –±—Ä–∞—É–∑–µ—Ä–µ: https://$DOMAIN"
echo "2. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –Ω–∞ SSL Labs: https://www.ssllabs.com/ssltest/"
echo "3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –Ω–∞ Security Headers: https://securityheaders.com/"
echo "4. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Mozilla Observatory: https://observatory.mozilla.org/"
echo ""
echo "üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
